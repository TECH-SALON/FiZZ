#! /usr/bin/env bash

function check_aws() {
  if ! which aws > /dev/null; then
    echo "Can't find AWS CLI. Install 'awscli' using pip."
    exit 1
  fi
  if ! aws configure list --profile $profile > /dev/null; then
    echo "Run \`aws configure --profile $profile\` to create it"
    exit 1
  fi
}

function create_table() {
  local table_dir=${1%/}
  local table_name=$(basename $table_dir)
  local role_name="${2}_cognito_authenticated"
  if [[ ! -s ${table_dir}/table_info.json ]]; then
    aws --profile $profile dynamodb create-table \
      --table-name $table_name \
      --cli-input-json "file://${table_dir}/config.json" \
      > ${table_dir}/table_info.json

    echo -n "Waiting for table creation..."
    aws --profile $profile dynamodb describe-table --table-name "$table_name" > ${table_dir}/table_info.json
    while [[ "$(support/jsed.py ${table_dir}/table_info.json 'Table.TableStatus')" != "ACTIVE" ]]; do
      aws --profile $profile dynamodb describe-table --table-name "$table_name" > ${table_dir}/table_info.json
      echo -n .
    done
    echo "...done!"
  fi

  local table_arn=$(support/jsed.py ${table_dir}/table_info.json 'Table.TableArn')
  generate_table_policy ${table_arn} > ${table_dir}/role_policy.json
  aws --profile $profile iam put-role-policy \
    --policy-document file://${table_dir}/role_policy.json \
    --role-name ${role_name} \
    --policy-name ${table_name}_table_access
}

function help() {
  echo
  echo "Usage: fizz-aws <action> [arguments...]"
  echo
  echo "Actions:"
  echo "    create_local_db"
  echo
}

function create_local_dynamo_db() {
  local table_dir=${1%/}
  local table_name=$(basename $table_dir)
  local endpoint="http://localhost:8000"
  aws dynamodb create-table \
    --endpoint-url $endpoint \
    --table_name $table_name \
    --cli-input-json "file://${table_dir}/config.json"
}

action=${1:-"help"}

case "$action" in
  create_local_db)
    check_aws
    create_local_dynamo_db
    ;;
  *)
    help
    ;;
esac
