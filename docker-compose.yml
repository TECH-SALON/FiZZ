version: '3'
services:
  go:
    build:
      context: ./gameserver
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - "./gameserver:/go/src/app"
      - "go:/go"
    env_file:
      - ./.env.dev
    tty: true
    stdin_open: true
  webpack:
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    volumes:
      - "./client:/app"
    command: ["yarn", "start"]
    env_file:
      - ./.env.dev
    tty: false
    stdin_open: false
  sam:
    # image: cnadiminti/aws-sam-local
    build:
      context: ./sam
      dockerfile: Dockerfile
    command: local start-api -t lambda/template.yml --docker-volume-basedir "$PWD/sam/lambda" --host 0.0.0.0
    ports:
      - '3000:3000'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - "./sam:/var/opt"
    env_file:
      - ./.env.dev
  db:
    image: dwmkerr/dynamodb
    ports:
      - '8000:8000'
    volumes:
      - "db:/data"
    command: "-sharedDb -dbPath /data"
    env_file:
      - ./.env.dev

  data:
    image: "busybox"
    volumes:
      - "go:/go"
      - "db:/data"

volumes:
  go:
    driver: local
  db:
    driver: local
